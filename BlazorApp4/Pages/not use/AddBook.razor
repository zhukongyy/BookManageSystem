@page "/addbook"
@using AntDesign.TableModels
@using System.ComponentModel.DataAnnotations
@using System.Net.Http.Headers
@using System.Text.Json;
@inject HttpClient Http
@inject INotificationService _notice
<h1>添加图书</h1>
<Form @ref="form"
      Model="@book"
      OnFinish="HandleSubmit"
      LabelColSpan="8"
      WrapperColSpan="32"
      Style=" justify-content: right; align-items: center">
    <FormItem Style="width:400px" Label="ISBN">
        <Input @bind-Value="@context.ISBN" />
    </FormItem>
    <FormItem Style="width:400px" Label="标题">
        <Input @bind-Value="@context.Title"/>
    </FormItem>
    <FormItem Style="width:400px"  Label="作者">
        <Input @bind-Value="@context.Author" />
    </FormItem>
    <FormItem Style="width:400px" Label="出版商">
        <Input @bind-Value="@context.Publisher" />
    </FormItem>
    <FormItem Style="width:400px" WrapperColOffset="8" WrapperColSpan="16">
        <Button Type="@ButtonType.Primary" HtmlType="submit">
            Submit
        </Button>
        <Button OnClick="Reset">
            Reset
        </Button>
    </FormItem>
</Form>
@code
{
    public class Book
    {
        [Required]
        public string? ISBN { get; set; }
        [Required]
        public string? Title { get; set; }
        [Required]
        public string? Author { get; set; }
        [Required]
        public string? Publisher { get; set; }
    }

    private Book book = new();
    private Form<Book> form;


    private void Reset(MouseEventArgs args)
    {
        form.Reset();
    }

    private async Task HandleSubmit()
    {
        var c = await Http.PostAsJsonAsync<Book>("/bookadd", book);
        if (c.IsSuccessStatusCode)
        {

            await NoticeModel.ShowNotification("添加成功", "添加成功", _notice, NotificationType.Success);
        }
        else
        {
            await NoticeModel.ShowNotification("添加失败", "添加失败", _notice, NotificationType.Error);
        }
    }

}